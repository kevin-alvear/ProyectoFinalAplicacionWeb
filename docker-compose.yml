# library_project/docker-compose.yml
version: '3.8'
services:
  db:
    image: postgres:15
    restart: always
    environment:
      POSTGRES_DB: librarydb
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: admin
    ports:
      - "5433:5432" # Expone el puerto 5432 de postgres al 5433 de tu máquina
    volumes:
      - pgdata:/var/lib/postgresql/data

  keycloak:
    image: quay.io/keycloak/keycloak:22.0.0
    restart: always
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      # Esta URL es correcta, usa el nombre del servicio 'db'
      KC_DB_URL: jdbc:postgresql://db:5432/librarydb 
      KC_DB_USERNAME: postgres
      KC_DB_PASSWORD: admin
      KC_HOSTNAME: localhost # Hostname visto desde tu navegador
    ports:
      - "8080:8080"
    depends_on:
      - db

  # --- AÑADIMOS EL SERVICIO PARA TU API DE FASTAPI ---
  api:
    # Construye la imagen usando el Dockerfile en el directorio actual (.)
    build: . 
    restart: always
    ports:
      # Expone el puerto 8000 de la API al puerto 8000 de tu máquina
      - "8001:8000"
    volumes:
      # Monta tu código local en el contenedor.
      # Esto permite que --reload funcione, ¡los cambios se reflejan al instante!
      - ./backend:/app/backend
    environment:
      # ¡Aquí está la magia! Pasamos la URL de la base de datos a nuestra API.
      # Usamos 'db' como el host, porque así se llama el servicio de postgres.
      # Usamos el puerto interno de Docker, 5432.
      - DATABASE_URL=postgresql://postgres:admin@db:5432/librarydb
    depends_on:
      # Le decimos a Docker que el servicio 'api' depende de 'db'
      # y no arrancará hasta que la base de datos esté lista.
      - db

volumes:
  pgdata: